# Generated by Django 4.0.3 on 2022-10-20 18:32

import account.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.CharField(default='9077945396', max_length=10, primary_key=True, serialize=False, unique=True)),
                ('email', models.EmailField(max_length=254, unique=True, validators=[account.models.email_profanity_filter], verbose_name='email')),
                ('first_name', models.CharField(max_length=15, validators=[account.models.length_check, account.models.profanity_filter, account.models.validate_first_name], verbose_name='name')),
                ('isd_code', models.CharField(default='+48', max_length=4)),
                ('phone_number', models.CharField(blank=True, max_length=12, null=True)),
                ('has_organisation', models.BooleanField(default=False)),
                ('rating', models.SmallIntegerField(default=10)),
                ('can_have_organisation', models.BooleanField(default=False)),
                ('can_create_posts', models.BooleanField(default=True)),
                ('can_send_messages', models.BooleanField(default=True)),
                ('can_report', models.BooleanField(default=True)),
                ('accepts_tos', models.BooleanField(default=False, validators=[account.models.tos_check])),
                ('display_phone', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['email'],
            },
        ),
    ]
